Imports System.IO
Imports System.Net
Imports System.Net.Sockets
Imports System.Reflection
Imports System.Resources
Imports System.Timers

Public Class frmMain
    Dim MyIni As Ini

    Dim vCamera_Land_Left As String = "hikvision"
    Dim vCamera_Land_Right As String = "hikvision"

    Dim vCamera_Sea_Left As String = "hikvision"
    Dim vCamera_Sea_Right As String = "hikvision"

    Dim vCameraIp_R_1 As String = "0"
    Dim vCameraIp_R_2 As String = "0"
    Dim vCameraIp_L_1 As String = "0"
    Dim vCameraIp_L_2 As String = "0"

    Dim vUser As String = ""
    Dim vPassword As String = ""
    Dim vChannel As String = ""

    Dim resx As ResXResourceSet

    Dim vToggleView As Boolean = True
    Dim vToggleRatio As Boolean = False 'Default is "16:9"

    Dim vRefreshTimer As New Timer
    Private Enum InputState
        IDLE = 0
        OPENING = 1
        BUFFERING = 2
        PLAYING = 3
        PAUSED = 4
        STOPPING = 5
        ENDED = 6
        ERRORSTATE = 7
    End Enum
    'Private Sub btnSwitch_Click(sender As Object, e As EventArgs) Handles btnSwitch.Click

    '    With AxVLCPluginR1
    '        .playlist.add("rtsp://gate:Gateview2018@" & vCameraIp_1 & "/Streaming/Channels/2")
    '        .playlist.playItem(0)
    '    End With

    '    With AxVLCPluginR2
    '        .playlist.add("rtsp://gate:Gateview2018@" & vCameraIp_2 & "/Streaming/Channels/2")
    '        .playlist.playItem(0)
    '    End With
    '    'AxVLCPlugin21.video.width = 760
    '    'AxVLCPlugin21.video.fullscreen = True
    '    'CPlugin21.video.aspectRatio = "16:9"  '    'AxVLCPlugin21.Width = 1024 'SplitContainer1.Panel1.Width
    '    ' AxVLCPlugin21.video.aspectRatio = "16:9" 'AxVLCPlugin21.Width + ":" + AxVLCPlugin21.Height
    '    'AxVLCPlugin21.Height = SplitContainer1.Panel1.Height
    'End Sub

    'To Check camera service , if down program will do reconnect ()  
    Sub RefreshCamera()
        Try
            vRefreshTimer.Stop()
            'Sea Left
            If check_Camera_available(vCameraIp_R_1) Then
                Dim state As InputState = DirectCast(AxVLCPluginSea1.input.state, InputState)
                If state <> 3 Then
                    AxVLCPluginSea1.playlist.playItem(0)
                End If
            End If

            'Sea Right
            If check_Camera_available(vCameraIp_R_2) Then
                Dim state As InputState = DirectCast(AxVLCPluginSea2.input.state, InputState)
                If state <> 3 Then
                    AxVLCPluginSea2.playlist.playItem(0)
                End If
            End If
            'Land Left
            If check_Camera_available(vCameraIp_L_1) Then
                Dim state As InputState = DirectCast(AxVLCPluginLand1.input.state, InputState)
                If state <> 3 Then
                    AxVLCPluginLand1.Visible = True
                    AxVLCPluginLand1.playlist.playItem(0)
                End If
            Else
                AxVLCPluginLand1.Visible = False
            End If

            'Land Left
            If check_Camera_available(vCameraIp_L_2) Then
                Dim state As InputState = DirectCast(AxVLCPluginLand2.input.state, InputState)
                If state <> 3 Then
                    AxVLCPluginLand2.Visible = True
                    AxVLCPluginLand2.playlist.playItem(0)
                End If
            Else
                AxVLCPluginLand2.Visible = False
            End If
            'check_Camera_available("192.168.103.29")
        Catch ex As Exception

        End Try
        vRefreshTimer.Start()
    End Sub

    'Sub show_disconnet_box()
    '    Dim myBrush As System.Drawing.SolidBrush = New System.Drawing.SolidBrush(System.Drawing.Color.Red)
    '    Dim formGraphics As System.Drawing.Graphics
    '    formGraphics = Me.CreateGraphics()
    '    formGraphics.FillRectangle(myBrush, New Rectangle(100, 100, 300, 500))
    '    myBrush.Dispose()
    '    formGraphics.Dispose()
    'End Sub

    Private Sub frmMain_Load(sender As Object, e As EventArgs) Handles Me.Load
        vRefreshTimer.Interval = 5000
        AddHandler vRefreshTimer.Elapsed, New ElapsedEventHandler(AddressOf RefreshCamera)

        'Exit Sub
        'check_Camera_available("192.168.103.29")
        'show_disconnet_box()

        Dim fName As String = ("system.ini")              'path to text file
        MyIni = New Ini(fName)

        reload_setting()
        initial_camera_platlist()

        play_camera(0) 'Play on low resolution

        Dim versionNumber As Version

        versionNumber = Assembly.GetExecutingAssembly().GetName().Version
        Me.Text = Me.Text & " version :" & versionNumber.ToString & "  (ip : " & GetIPv4Address() & ")"

        ' splitContainerControl1.SplitterPosition = splitContainerControl1.Height / 2;
        'SplitContainer1.Panel1.Height = SplitContainer1.Height / 2
        vRefreshTimer.Start()
    End Sub

    Private Function GetIPv4Address() As String
        GetIPv4Address = String.Empty
        Dim strHostName As String = System.Net.Dns.GetHostName()
        Dim iphe As System.Net.IPHostEntry = System.Net.Dns.GetHostEntry(strHostName)

        For Each ipheal As System.Net.IPAddress In iphe.AddressList
            If ipheal.AddressFamily = System.Net.Sockets.AddressFamily.InterNetwork Then
                If ipheal.ToString() <> "192.168.1.10" Then
                    GetIPv4Address = ipheal.ToString()
                    Exit For
                End If

            End If
        Next




    End Function

    Private Sub initial_camera_platlist()

        'Dahua Camera
        'rtsp://admin:admin@192.168.1.108: 554/cam/realmonitor?channel=1&subtype=0 - Main stream
        'rtsp://admin:admin@192.168.1.108: 554/cam/realmonitor?channel=1&subtype=1 - Sub stream


        'Sea-Left
        With AxVLCPluginSea1
            If vCamera_Sea_Left = "Hikvision" Then
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_1 & "/Streaming/Channels/" & vChannel)
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_1 & "/Streaming/Channels/1")
            Else 'Dahua
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_1 & ": 554/cam/realmonitor?channel=1&subtype=1") 'Sub stream
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_1 & ": 554/cam/realmonitor?channel=1&subtype=0") 'Main Stream
            End If

        End With

        'Sea-Right
        With AxVLCPluginSea2
            If vCamera_Sea_Right = "Hikvision" Then
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_2 & "/Streaming/Channels/" & vChannel)
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_2 & "/Streaming/Channels/1")
            Else
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_2 & ": 554/cam/realmonitor?channel=1&subtype=1") 'Sub stream
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_R_2 & ": 554/cam/realmonitor?channel=1&subtype=0") 'Main Stream
            End If
        End With

        'Land-Left
        With AxVLCPluginLand1
            If vCamera_Land_Left = "Hikvision" Then
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_1 & "/Streaming/Channels/" & vChannel)
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_1 & "/Streaming/Channels/1")
            Else
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_1 & ": 554/cam/realmonitor?channel=1&subtype=1") 'Sub stream
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_1 & ": 554/cam/realmonitor?channel=1&subtype=0") 'Main Stream
            End If
        End With

        'Land-Right
        With AxVLCPluginLand2
            If vCamera_Land_Right = "Hikvision" Then
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_2 & "/Streaming/Channels/" & vChannel)
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_2 & "/Streaming/Channels/1")
            Else
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_2 & ": 554/cam/realmonitor?channel=1&subtype=1") 'Sub stream
                .playlist.add("rtsp://" & vUser & ":" & vPassword & "@" & vCameraIp_L_2 & ": 554/cam/realmonitor?channel=1&subtype=0") 'Main Stream
            End If

        End With
    End Sub

    Private Sub play_camera(Optional playlistIndex As Integer = 0)
        'On Top Camera

        With AxVLCPluginSea1
            .playlist.playItem(playlistIndex)
        End With

        With AxVLCPluginSea2
            .playlist.playItem(playlistIndex)
        End With

        'On Bottom Camera
        With AxVLCPluginLand1
            .playlist.playItem(playlistIndex)

        End With

        With AxVLCPluginLand2
            .playlist.playItem(playlistIndex)
        End With

    End Sub

    Function check_Camera_available(ip As String) As Boolean
        Dim socket As New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp)
        Dim result As Object = socket.BeginConnect(ip, 80, Nothing, Nothing)
        Dim success As Boolean = result.AsyncWaitHandle.WaitOne(1000, False)
        Dim resturnVal As Boolean = socket.Connected
        ' socket socket = New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        'var result = socket.BeginConnect("xxx.com", 80, null, null);
        'bool success = result.AsyncWaitHandle.WaitOne(3000, False); // test the connection for 3 seconds
        'var resturnVal = socket.Connected;
        If socket.Connected Then
            socket.Disconnect(True)
        End If
        socket.Dispose()
        Return resturnVal
    End Function


    Private Sub reload_setting()
        resx = New ResXResourceSet("resource1.resx")
        vCameraIp_R_1 = resx.GetString("ip_r_1")
        vCameraIp_R_2 = resx.GetString("ip_r_2")
        vCameraIp_L_1 = resx.GetString("ip_l_1")
        vCameraIp_L_2 = resx.GetString("ip_l_2")
        vUser = resx.GetString("user")
        vPassword = resx.GetString("password")
        vChannel = resx.GetString("channel")

        'Read Brand Setting from system.ini
        vCamera_Land_Left = MyIni.GetValue("camera_land_left", "brand")
        vCamera_Land_Right = MyIni.GetValue("camera_land_right", "brand")
        vCamera_Sea_Left = MyIni.GetValue("camera_sea_left", "brand")
        vCamera_Sea_Right = MyIni.GetValue("camera_sea_right", "brand")

        vCamera_Land_Left = IIf(vCamera_Land_Left = "", "Hikvision", vCamera_Land_Left)
        vCamera_Land_Right = IIf(vCamera_Land_Right = "", "Hikvision", vCamera_Land_Right)
        vCamera_Sea_Left = IIf(vCamera_Sea_Left = "", "Hikvision", vCamera_Sea_Left)
        vCamera_Sea_Right = IIf(vCamera_Sea_Right = "", "Hikvision", vCamera_Sea_Right)

    End Sub

    Public Function ScreenResolution() As String
        Dim intX As Integer = Screen.PrimaryScreen.Bounds.Width
        Dim intY As Integer = Screen.PrimaryScreen.Bounds.Height
        Return intX & " × " & intY
    End Function

    Private Sub CenterToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles CenterToolStripMenuItem.Click
        show_all_side()
    End Sub



    Private Sub SettingToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles SettingToolStripMenuItem.Click
        frmSetting.ShowDialog()
        'reload_setting()
        'reload_camera()
    End Sub

    Private Sub SeaSideToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles SeaSideToolStripMenuItem.Click
        show_sea_side()
    End Sub

    Sub show_all_side()
        SplitContainer1.Panel1Collapsed = False
        SplitContainer1.Panel2Collapsed = False

        Dim playlistIndex As Integer = 0 'Low resolution
        AxVLCPluginSea1.playlist.playItem(playlistIndex)
        AxVLCPluginSea2.playlist.playItem(playlistIndex)
        AxVLCPluginLand1.playlist.playItem(playlistIndex)
        AxVLCPluginLand2.playlist.playItem(playlistIndex)
    End Sub
    Sub show_sea_side()

        SplitContainer1.Panel1Collapsed = False 'Show sea
        SplitContainer1.Panel2Collapsed = True   'Hide land

        'Enable Sea side (11,12)
        AxVLCPluginSea1.playlist.playItem(1)
        AxVLCPluginSea2.playlist.playItem(1)
        AxVLCPluginSea1.playlist.play()
        AxVLCPluginSea2.playlist.play()


        'Disable Land side (21,22)
        AxVLCPluginLand1.playlist.stop()
        AxVLCPluginLand2.playlist.stop()
    End Sub

    'Public Function VLC_ChangeAspectRatio(NewRatio As String)
    '    VLC.video.aspectRatio = NewRatio
    'End Function

    Sub show_land_side()

        SplitContainer1.Panel1Collapsed = True 'Hide sea
        SplitContainer1.Panel2Collapsed = False   'Show land

        'Enable Land side (21,22)
        AxVLCPluginLand1.playlist.playItem(1)
        AxVLCPluginLand2.playlist.playItem(1)


        AxVLCPluginLand1.playlist.play()
        AxVLCPluginLand2.playlist.play()

        'Disable Sea side (11,12)
        AxVLCPluginSea1.playlist.stop()
        AxVLCPluginSea2.playlist.stop()
    End Sub

    Private Sub LandSideToolStripMenuItem_Click(sender As Object, e As EventArgs) Handles LandSideToolStripMenuItem.Click
        show_land_side()
    End Sub

    Private Sub tsbSeaside_Click(sender As Object, e As EventArgs) Handles tsbSeaside.Click
        show_sea_side()
    End Sub

    Private Sub tsbLandSide_Click(sender As Object, e As EventArgs) Handles tsbLandSide.Click
        show_land_side()
    End Sub

    Private Sub tsbAll_Click(sender As Object, e As EventArgs) Handles tsbAll.Click
        show_all_side()
        ' tsbRatio169_Click(sender, e)
    End Sub

    Private Sub tsbRatio169_Click(sender As Object, e As EventArgs) Handles tsbRatio169.Click
        Dim strRatio As String = "16:9" '16:9 ,4:3 ,8:5
        AxVLCPluginSea1.video.aspectRatio = strRatio
        AxVLCPluginSea2.video.aspectRatio = strRatio
        AxVLCPluginLand1.video.aspectRatio = strRatio
        AxVLCPluginLand2.video.aspectRatio = strRatio
    End Sub

    Private Sub tsbRatio85_Click(sender As Object, e As EventArgs)
        Dim strRatio As String = "8:5" '16:9 ,4:3 ,8:5
        AxVLCPluginSea1.video.aspectRatio = strRatio
        AxVLCPluginSea2.video.aspectRatio = strRatio
        AxVLCPluginLand1.video.aspectRatio = strRatio
        AxVLCPluginLand2.video.aspectRatio = strRatio
    End Sub

    Private Sub tsbRatio43_Click(sender As Object, e As EventArgs) Handles tsbRatio43.Click
        Dim strRatio As String = "4:3" '16:9 ,4:3 ,8:5
        AxVLCPluginSea1.video.aspectRatio = strRatio
        AxVLCPluginSea2.video.aspectRatio = strRatio
        AxVLCPluginLand1.video.aspectRatio = strRatio
        AxVLCPluginLand2.video.aspectRatio = strRatio
    End Sub

    Private Sub AxVLCPluginLand1_Enter(sender As Object, e As EventArgs) Handles AxVLCPluginLand1.Enter

    End Sub
End Class



Public Class Ini

    Private _Sections As New Dictionary(Of String, Dictionary(Of String, String))
    Private _FileName As String
    ''' <summary>
    ''' </summary>
    ''' <param name="IniFileName">Drive,Path and Filname for the inifile</param>
    ''' <remarks></remarks>
    Public Sub New(ByVal IniFileName As String)

        Dim Rd As StreamReader
        Dim Content As String
        Dim Lines() As String
        Dim Line As String
        Dim Key As String
        Dim Value As String
        Dim SectionValues As Dictionary(Of String, String) = Nothing
        Dim Name As String

        _FileName = IniFileName

        'check if the file exists
        If Not File.Exists(IniFileName) Then
            Throw New FileLoadException(String.Format("The file {0} is not found", IniFileName))
        Else
            'Read the file if present.
            Rd = New StreamReader(IniFileName)
            Content = Rd.ReadToEnd
            'Split It into lines
            Lines = Content.Split(vbCrLf)

            'Place the content in an object sructure
            For Each Line In Lines

                'Trim the line
                Line = Line.Trim
                If Line.Length <= 2 OrElse Line.Substring(0, 1) = "'" OrElse Line.Substring(0, 3).ToUpper = "REM" Then
                    'There's no valid data or it's commented out... Do nothing 
                ElseIf Line.IndexOf("[") = 0 AndAlso Line.IndexOf("]") = Line.Length - 1 Then
                    'We hit a section
                    Name = Line.Replace("]", String.Empty).Replace("[", String.Empty).Trim.ToUpper
                    SectionValues = New Dictionary(Of String, String)
                    _Sections.Add(Name.ToUpper, SectionValues)

                    'An = character as the firstcharacter is an invalid line... let's be relaxed an just ignore it.
                ElseIf Line.IndexOf("=") > 0 AndAlso SectionValues IsNot Nothing Then
                    'We hit a value line , empty line or out commented line
                    'we don't use split as that character could be part of the value as well
                    Key = Line.Substring(0, Line.IndexOf("=")).Trim
                    If Line.IndexOf("=") = Line.Length - 1 Then
                        Value = String.Empty
                    Else
                        Value = Line.Substring(Line.IndexOf("=") + 1, Line.Length - (Line.IndexOf("=") + 1)).Trim
                    End If
                    'Add the valu to 
                    SectionValues.Add(Key.ToUpper, Value)
                End If
            Next

            Rd.Close()
            Rd.Dispose()
            Rd = Nothing

        End If
    End Sub

    Public Function GetValue(ByVal Section As String, ByVal Name As String) As String

        If _Sections.ContainsKey(Section.ToUpper) Then
            Dim SectionValues As Dictionary(Of String, String) = Nothing
            SectionValues = _Sections(Section.ToUpper)
            If SectionValues.ContainsKey(Name.ToUpper) Then
                Return SectionValues(Name.ToUpper)
            End If
        End If

        Return Nothing 'if preferred return String.empty here

    End Function

    'Public Function SetValue(ByVal Section As String, ByVal Name As String, ByVal Value As String, Optional ByVal Save As Boolean = False) As Boolean
    '    Dim SectionValues As Dictionary(Of String, String) = Nothing
    '    Name = Name.ToUpper.Trim
    '    Section = Section.ToUpper.Trim
    '    If _Sections.ContainsKey(Section) Then
    '        SectionValues = _Sections(Section)
    '        If SectionValues.ContainsKey(Name) Then
    '            SectionValues.Remove(Name)
    '        End If
    '        SectionValues.Add(Name, Value)
    '    Else
    '        SectionValues = New Dictionary(Of String, String)
    '        _Sections.Add(Section, SectionValues)
    '        SectionValues.Add(Name, Value)
    '    End If

    '    If Save Then
    '        Return SaveIniFile()
    '    Else
    '        Return True
    '    End If

    'End Function


    'Public Function SaveIniFile() As Boolean

    '    Dim Rw As StreamWriter
    '    Dim SectionPair As KeyValuePair(Of String, Dictionary(Of String, String))
    '    Dim ValuePair As KeyValuePair(Of String, String)

    '    Dim Pth As String = Path.GetDirectoryName(_FileName)

    '    If Directory.Exists(Pth) Then
    '        Rw = New StreamWriter(_FileName, False)
    '        For Each SectionPair In _Sections
    '            Rw.WriteLine("[" & SectionPair.Key & "]")
    '            If SectionPair.Value IsNot Nothing Then
    '                For Each ValuePair In SectionPair.Value
    '                    Rw.WriteLine(ValuePair.Key & "=" & ValuePair.Value)
    '                Next
    '            End If
    '        Next
    '        Rw.WriteLine("")
    '        Rw.Flush()
    '        Rw.Close()
    '        Rw.Dispose()
    '        Rw = Nothing
    '        SaveIniFile = True
    '    End If

    'End Function

    'Function DeleteValue(ByVal Section As String, ByVal Name As String, Optional ByVal Save As Boolean = False) As Boolean

    '    Dim SectionValues As Dictionary(Of String, String) = Nothing

    '    Name = Name.ToUpper.Trim
    '    Section = Section.ToUpper.Trim
    '    If _Sections.ContainsKey(Section) Then
    '        SectionValues = _Sections(Section)
    '        If SectionValues.ContainsKey(Name) Then
    '            SectionValues.Remove(Name)
    '        End If
    '    End If

    '    If Save Then
    '        Return SaveIniFile()
    '    Else
    '        Return True
    '    End If

    'End Function

    'Function DeleteSection(ByVal Section As String, Optional ByVal Save As Boolean = False) As Boolean

    '    Dim SectionValues As Dictionary(Of String, String) = Nothing

    '    Section = Section.ToUpper.Trim
    '    If _Sections.ContainsKey(Section) Then
    '        _Sections.Remove(Section)
    '    End If

    '    If Save Then
    '        Return SaveIniFile()
    '    Else
    '        Return True
    '    End If

    'End Function


End Class